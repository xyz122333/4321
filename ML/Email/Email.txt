import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


df = pd.read_csv('emails.csv')
df.head()


df.isnull().sum()


df.dropna(how='any',inplace=True)


df.dropna(how='any',inplace=True)


x = df.iloc[:,1:-1].values
y = df.iloc[:,-1].values


from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.25,random_state=10)


from sklearn.metrics import ConfusionMatrixDisplay,confusion_matrix,accuracy_score,precision_score,recall_score,plot_precision_recall_curve,plot_roc_curve
def report(classifier):
    y_pred = classifier.predict(x_test)
    cm = confusion_matrix(y_test,y_pred)
    display = ConfusionMatrixDisplay(cm,display_labels=classifier.classes_)
    display.plot()
    print(f"Accuracy:  {accuracy_score(y_test,y_pred)}")
    print(f"Precision Score:  {precision_score(y_test,y_pred)}")
    print(f"Recall Score:  {recall_score(y_test,y_pred)}")
    plot_precision_recall_curve(classifier,x_test,y_test)
    plot_roc_curve(classifier,x_test,y_test)


from sklearn.neighbors import KNeighborsClassifier


kNN = KNeighborsClassifier(n_neighbors=10)
kNN.fit(x_train,y_train)


report(kNN)


from sklearn.svm import SVC
svm = SVC(gamma='auto',random_state=10)
svm.fit(x_train,y_train)


report(svm)


